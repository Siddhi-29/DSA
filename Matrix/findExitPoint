/*
Problem: Exit Point in a Matrix

Given a matrix of size n x m with 0’s and 1’s, you enter the matrix at cell (0,0) in left to right direction.
Whenever you encounter a 0 you retain it in the same direction, else if you encounter a 1 you have to change the direction
to the right of the current direction and change that 1 value to 0, you have to find out from which index you will leave 
the matrix at the end.

Solution:
*/
class Solution {
    public int[] FindExitPoint(int n, int m, int[][] matrix) {
        // code here
        int[][] direction = {{0,1},{1,0},{0,-1},{-1,0}};
        
        return solve(0, 0, matrix , 0, direction);
    }
    
    public int[] solve(int i , int j , int[][] grid , int k, int[][] direction){
        
        if(grid[i][j] == 1){
            grid[i][j] = 0;
            k = (k + 1) % 4;
        }
        
        int tempi = i + direction[k][0];
        int tempj = j + direction[k][1];
        
        if(tempi < 0 || tempi == grid.length || tempj < 0 || tempj == grid[0].length){
            int[] res = new int[2];
            res[0] = i;
            res[1] = j;
            return res;
        }
        
        return solve(tempi , tempj , grid , k , direction);
        
    }
}
