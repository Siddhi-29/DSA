/*
Problem: Remove duplicate element from sorted Linked List

Given a singly linked list consisting of N nodes. The task is to remove duplicates (nodes with duplicate values) from
the given list (if exists).
Note: Try not to use extra space. The nodes are arranged in a sorted way.

Solution:
*/
class GfG
{
    //Function to remove duplicates from sorted linked list.
    Node removeDuplicates(Node head)
    {
	// Your code here
	if(head==null || head.next==null){
	    return head;
	}
	Node curr = head.next;
	Node prev = head;
	while(curr!= null){
	    if(prev.data == curr.data){
	        prev.next= curr.next;
	        curr = curr.next;
	    }
	    else{
	        prev= curr;
	        curr= curr.next;
	    }
	}
	return head;
    }
}
