/*
Problem: Number of Paths
The problem is to count all the possible paths from top left to bottom right of an MxN matrix with the constraints that from each cell you can either move to right or down.

Return answer modulo 109+7.

Solution:
*/
class Solution{
    
    long numberOfPaths(int M, int N) {
        // Code Here
        long[][] dp = new long[M][N];
        for(long[] ele : dp){
            Arrays.fill(ele, -1);
        }
        return solve(0, 0, dp, M, N);
        
    }
    public long solve(int i, int j, long[][] dp, int m, int n){
        if(i == m-1 && j == n-1){
            return 1;
        }
        if(i == m || j == n){
            return 0;
        }
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        dp[i][j] = (solve(i, j+1, dp, m, n) + solve(i+1, j, dp, m, n))%1000000007;
        return dp[i][j];
    }
    
}
