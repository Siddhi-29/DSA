/* 
Problem: Longest consecutive subsequence

Given an array of positive integers. Find the length of the longest sub-sequence such that elements in the subsequence
are consecutive integers, the consecutive numbers can be in any order.

Solution:
*/

class Solution
{   
    // arr[] : the input array
    // N : size of the array arr[]
    
    //Function to return length of longest subsequence of consecutive integers.
	static int findLongestConseqSubseq(int arr[], int N)
	{
	   // add your code here
	   int count=0;
	   int max=0;
	   HashSet<Integer> set = new HashSet<>();
	   for( int i=0; i<N; i++){
	       set.add(arr[i]);
	   }
	   for( int i=0; i<N; i++){
	       if(!set.contains(arr[i]-1)){
	           int a=arr[i];
	           count=1;
	           while(set.contains(a+1)){
	               count++;
	               a++;
	           }
	           max=Math.max(max,count);
	       }
	   }
	   return max;
	}
}
