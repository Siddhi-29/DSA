/*
Problem: Repeated Character

Given a string consisting of lowercase english alphabets. Find the repeated character present first in the string.

NOTE - If there are no repeating characters return '#'.

Solution:
*/
class Solution
{
    char firstRep(String S)
    {
        // your code here
        HashMap<Character, Integer> hm = new HashMap<>();
        int n= S.length();
        for( int i=0; i<n; i++){
            char ch = S.charAt(i);
            int count = hm.getOrDefault(ch,0);
            hm.put(ch,(count+1));
        }
        for(int i=0; i<n; i++){
            char ch = S.charAt(i);
            if(hm.containsKey(ch) && (hm.get(ch)>1)){
                return ch;
            }
        }
        return '#';
    }
}
