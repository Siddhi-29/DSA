/*
Problem: Path to reach origin

You are standing on a point (x, y) and you want to go to the origin (0, 0) by taking steps either left or down i.e. from each point you are allowed to move either in
(x-1, y) or (x, y-1). Find the number of paths from point to origin.

Solution:
*/
class Solution
{
    public static int ways(int n, int m)
    {
        // complete the function
        int[][] dp = new int[n+1][m+1];
        
        for(int[] temp : dp){
            Arrays.fill(temp,-1);
        }
        return solve(n, m, dp);
    }
    public static int solve(int x, int y, int[][] dp){
        if(x==0 && y==0){
            return 1;
        }
        if(x<0 || y<0){
            return 0;
        }
        if(dp[x][y] != -1){
            return dp[x][y];
        }
        return dp[x][y] = (solve(x-1,y,dp)+solve(x,y-1,dp))%1000000007;
    }
}
